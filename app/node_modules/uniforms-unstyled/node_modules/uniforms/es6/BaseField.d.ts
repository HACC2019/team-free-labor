import { Component } from 'react';
export default class BaseField extends Component {
    static displayName: string;
    static propTypes: any;
    static contextTypes: {
        uniforms: any;
    };
    static childContextTypes: {
        uniforms: any;
    };
    constructor();
    getChildContext(): {
        uniforms: {
            name: string[];
            error: any;
            model: any;
            state: any;
            schema: any;
            onChange: any;
            onSubmit: any;
            randomId: any;
        };
    };
    shouldComponentUpdate(nextProps: any, _: any, { uniforms: nextContext }: {
        uniforms: any;
    }): boolean;
    props: any;
    options: {
        ensureValue: boolean;
        explicitInitialValue?: boolean;
        includeParent?: boolean;
        overrideValue: boolean;
    };
    randomId: number;
    getChildContextName(): string[];
    getChildContextError(): any;
    getChildContextModel(): any;
    getChildContextState(): any;
    getChildContextSchema(): any;
    getChildContextOnChange(): any;
    getChildContextOnSubmit(): any;
    getFieldProps(name?: any, options?: any): any;
    findError(name: any): any;
    findField(name: any): any;
    findValue(name: any): any;
}
