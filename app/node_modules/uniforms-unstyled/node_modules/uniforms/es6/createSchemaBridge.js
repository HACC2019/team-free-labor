import invariant from 'invariant';
const registered = [];
function create(schema) {
    // There's no need for an extra wrapper.
    if (isBridge(schema)) {
        return schema;
    }
    const Bridge = registered.find(bridge => bridge.check(schema));
    invariant(Bridge, 'Unrecognised schema: %s', schema);
    return new Bridge(schema);
}
function isBridge(schema) {
    return !!(schema &&
        schema.getError &&
        schema.getErrorMessage &&
        schema.getErrorMessages &&
        schema.getField &&
        schema.getInitialValue &&
        schema.getProps &&
        schema.getSubfields &&
        schema.getType &&
        schema.getValidator);
}
function register(bridge) {
    registered.unshift(bridge);
}
export default Object.assign(create, { register, registered });
