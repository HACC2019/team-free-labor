"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var prop_types_1 = tslib_1.__importDefault(require("prop-types"));
var react_1 = tslib_1.__importDefault(require("react"));
var BaseForm_1 = tslib_1.__importDefault(require("./BaseForm"));
var nothing_1 = tslib_1.__importDefault(require("./nothing"));
var Quick = function (parent) { var _a; return _a = /** @class */ (function (_super) {
        tslib_1.__extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getNativeFormProps = function () {
            var _a = _super.prototype.getNativeFormProps.call(this), _b = _a.autoField, AutoField = _b === void 0 ? this.getAutoField() : _b, _c = _a.errorsField, ErrorsField = _c === void 0 ? this.getErrorsField() : _c, _d = _a.submitField, SubmitField = _d === void 0 ? this.getSubmitField() : _d, props = tslib_1.__rest(_a, ["autoField", "errorsField", "submitField"]);
            if (!props.children) {
                props.children = this.getChildContextSchema()
                    .getSubfields()
                    .map(function (key) { return react_1.default.createElement(AutoField, { key: key, name: key }); })
                    .concat([
                    react_1.default.createElement(ErrorsField, { key: "$ErrorsField" }),
                    react_1.default.createElement(SubmitField, { key: "$SubmitField" }),
                ]);
            }
            return props;
        };
        class_1.prototype.getAutoField = function () {
            return function () { return nothing_1.default; };
        };
        class_1.prototype.getErrorsField = function () {
            return function () { return nothing_1.default; };
        };
        class_1.prototype.getSubmitField = function () {
            return function () { return nothing_1.default; };
        };
        return class_1;
    }(parent)),
    _a.Quick = Quick,
    _a.displayName = "Quick" + parent.displayName,
    _a.propTypes = tslib_1.__assign(tslib_1.__assign({}, parent.propTypes), { autoField: prop_types_1.default.oneOfType([prop_types_1.default.func, prop_types_1.default.string]), errorsField: prop_types_1.default.oneOfType([prop_types_1.default.func, prop_types_1.default.string]), submitField: prop_types_1.default.oneOfType([prop_types_1.default.func, prop_types_1.default.string]) }),
    _a; };
exports.default = Quick(BaseForm_1.default);
