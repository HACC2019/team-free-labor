"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var uniforms_1 = require("uniforms");
var xor = function (item, array) {
    var index = array.indexOf(item);
    if (index === -1) {
        return array.concat([item]);
    }
    return array.slice(0, index).concat(array.slice(index + 1));
};
var renderCheckboxes = function (_a) {
    var allowedValues = _a.allowedValues, disabled = _a.disabled, fieldType = _a.fieldType, id = _a.id, name = _a.name, onChange = _a.onChange, transform = _a.transform, value = _a.value;
    return allowedValues.map(function (item) { return (react_1.default.createElement("div", { key: item },
        react_1.default.createElement("input", { checked: fieldType === Array ? value.includes(item) : value === item, disabled: disabled, id: id + "-" + item, name: name, onChange: function () { return onChange(fieldType === Array ? xor(item, value) : item); }, type: "checkbox" }),
        react_1.default.createElement("label", { htmlFor: id + "-" + item }, transform ? transform(item) : item))); });
};
var renderSelect = function (_a) {
    var allowedValues = _a.allowedValues, disabled = _a.disabled, id = _a.id, inputRef = _a.inputRef, label = _a.label, name = _a.name, onChange = _a.onChange, placeholder = _a.placeholder, required = _a.required, transform = _a.transform, value = _a.value;
    return (react_1.default.createElement("select", { disabled: disabled, id: id, name: name, onChange: function (event) {
            return onChange(event.target.value !== '' ? event.target.value : undefined);
        }, ref: inputRef, value: value },
        (!!placeholder || !required || value === '') && (react_1.default.createElement("option", { value: "", disabled: required, hidden: required }, placeholder || label)),
        allowedValues.map(function (value) { return (react_1.default.createElement("option", { key: value, value: value }, transform ? transform(value) : value)); })));
};
var Select = function (_a) {
    var allowedValues = _a.allowedValues, checkboxes = _a.checkboxes, disabled = _a.disabled, fieldType = _a.fieldType, id = _a.id, inputRef = _a.inputRef, label = _a.label, name = _a.name, onChange = _a.onChange, placeholder = _a.placeholder, required = _a.required, transform = _a.transform, value = _a.value, props = tslib_1.__rest(_a, ["allowedValues", "checkboxes", "disabled", "fieldType", "id", "inputRef", "label", "name", "onChange", "placeholder", "required", "transform", "value"]);
    return (react_1.default.createElement("div", tslib_1.__assign({}, uniforms_1.filterDOMProps(props)),
        label && react_1.default.createElement("label", { htmlFor: id }, label),
        checkboxes || fieldType === Array
            ? renderCheckboxes({
                allowedValues: allowedValues,
                disabled: disabled,
                id: id,
                name: name,
                onChange: onChange,
                transform: transform,
                value: value,
                fieldType: fieldType,
            })
            : renderSelect({
                allowedValues: allowedValues,
                disabled: disabled,
                id: id,
                name: name,
                onChange: onChange,
                transform: transform,
                value: value,
                inputRef: inputRef,
                label: label,
                placeholder: placeholder,
                required: required,
            })));
};
exports.default = uniforms_1.connectField(Select);
